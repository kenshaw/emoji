//go:build ignore

package main

import (
	"context"
	"encoding/json"
	"flag"
	"fmt"
	"go/format"
	"io/ioutil"
	"net/http"
	"os"
	"regexp"
	"strconv"
	"strings"

	"github.com/kenshaw/emoji"
)

func main() {
	urlstr := flag.String("url", "https://raw.githubusercontent.com/github/gemoji/master/db/emoji.json", "gemoji url")
	out := flag.String("o", "gemoji.go", "out")
	flag.Parse()
	if err := run(context.Background(), *urlstr, *out); err != nil {
		fmt.Fprintf(os.Stderr, "error: %v\n", err)
		os.Exit(1)
	}
}

func run(ctx context.Context, urlstr, out string) error {
	// generate data
	buf, err := generate(ctx, urlstr)
	if err != nil {
		return err
	}
	// write
	return ioutil.WriteFile(out, buf, 0644)
}

var replacer = strings.NewReplacer(
	"{emoji.Emoji{", "{\n{",
	", emoji.Emoji{", ",\n{",
	"}}", "},\n}",
	", Description:", ", ",
	", Category:", ", ",
	", Aliases:", ", ",
	", Tags:", ", ",
	", UnicodeVersion:", ", ",
	", IOSVersion:", ", ",
	", SkinTones:", ", ",
	"emoji.Emoji", "Emoji",
)

var emojiRE = regexp.MustCompile(`\{Emoji:"([^"]*)"`)

func generate(ctx context.Context, urlstr string) ([]byte, error) {
	// load gemoji data
	req, err := http.NewRequest("GET", urlstr, nil)
	if err != nil {
		return nil, err
	}
	cl := &http.Client{}
	res, err := cl.Do(req.WithContext(ctx))
	if err != nil {
		return nil, err
	}
	defer res.Body.Close()
	// unmarshal
	dec := json.NewDecoder(res.Body)
	dec.DisallowUnknownFields()
	var data []emoji.Emoji
	if err := dec.Decode(&data); err != nil {
		return nil, err
	}
	// add header
	str := replacer.Replace(fmt.Sprintf(tpl, urlstr, data))
	// change the format of the unicode string
	str = emojiRE.ReplaceAllStringFunc(str, func(s string) string {
		var err error
		if s, err = strconv.Unquote(s[len("{Emoji:"):]); err != nil {
			panic(err)
		}
		return "{" + strconv.QuoteToASCII(s)
	})
	// format
	return format.Source([]byte(str))
}

const tpl = `package emoji

// Code generated by gen.go. DO NOT EDIT.

// Gemoji returns the set of original Gemoji emoji data.
//
// See: %s
func Gemoji() []Emoji {
	return %#v
}
`
